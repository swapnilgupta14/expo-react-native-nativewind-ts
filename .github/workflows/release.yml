name: Release

on:
  workflow_run:
    workflows: ['CI']
    types:
      - completed
    branches: [main]

permissions:
  contents: write
  packages: write

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

jobs:
  release-android:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ env.EXPO_TOKEN }}

      - name: Build Android APK
        run: |
          npx expo export --platform android

      - name: Get version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: dist/

  release-ios:
    runs-on: macos-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ env.EXPO_TOKEN }}

      - name: Build iOS
        run: |
          npx expo export --platform ios

      - name: Get version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Upload iOS build
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: dist/

  deploy-web:
    runs-on: ubuntu-latest
    needs: [release-android, release-ios]
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build for Web
        run: bun run expo export --platform web

      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'

  create-release:
    runs-on: ubuntu-latest
    needs: [release-android, release-ios, deploy-web]
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Generate Release Notes
        id: release_notes
        run: |
          # Get commits since last tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

          if [ -z "$PREVIOUS_TAG" ]; then
            # First release
            COMMITS=$(git log --oneline --no-merges)
          else
            # Get commits since last tag
            COMMITS=$(git log --oneline --no-merges $PREVIOUS_TAG..HEAD)
          fi

          # Generate release notes
          cat > release_notes.md << EOF
          # Release v${{ steps.get_version.outputs.version }}

          ## ðŸ“¥ Downloads

          - **Android APK**: Download from assets below
          - **iOS Build**: Download from assets below  
          - **Web App**: https://expo-react-native-nativewind-m5u9y0feq-swapnilgupta14s-projects.vercel.app

          ## ðŸ“‹ Changes

          \`\`\`
          $COMMITS
          \`\`\`
          EOF

          echo "notes<<EOF" >> $GITHUB_OUTPUT
          cat release_notes.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: ${{ steps.release_notes.outputs.notes }}
          draft: false
          prerelease: false
          files: |
            ./android-builds/dist/*
            ./ios-builds/dist/*

      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: ./android-builds

      - name: Download iOS Build
        uses: actions/download-artifact@v4
        with:
          name: ios-build
          path: ./ios-builds

      - name: Debug File Structure
        run: |
          echo "=== Android Builds ==="
          ls -la ./android-builds/ || echo "No android-builds directory"
          echo "=== iOS Builds ==="
          ls -la ./ios-builds/ || echo "No ios-builds directory"
          echo "=== Current Directory ==="
          ls -la ./
