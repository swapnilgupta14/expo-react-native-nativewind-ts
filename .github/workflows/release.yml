name: Release

on:
  push:
    branches: [main]

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

jobs:
  release-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: bun install
        
      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ env.EXPO_TOKEN }}
          
      - name: Build Android APK
        run: |
          expo build:android --platform android --non-interactive
          
      - name: Get version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          
      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/release/app-release.apk

  release-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: bun install
        
      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ env.EXPO_TOKEN }}
          
      - name: Build iOS
        run: |
          expo build:ios --platform ios --non-interactive
          
      - name: Get version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          
      - name: Upload iOS build
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: ios/build/

  deploy-web:
    runs-on: ubuntu-latest
    needs: [release-android, release-ios]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: bun install
        
      - name: Setup Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Deploy to Vercel
        run: |
          vercel --prod --token ${{ env.VERCEL_TOKEN }} --yes
        env:
          VERCEL_TOKEN: ${{ env.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ env.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ env.VERCEL_ORG_ID }}

  create-release:
    runs-on: ubuntu-latest
    needs: [release-android, release-ios, deploy-web]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Get version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        
      - name: Generate Release Notes
        id: release_notes
        run: |
          # Get commits since last tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          if [ -z "$PREVIOUS_TAG" ]; then
            # First release
            COMMITS=$(git log --oneline --no-merges)
          else
            # Get commits since last tag
            COMMITS=$(git log --oneline --no-merges $PREVIOUS_TAG..HEAD)
          fi
          
          # Generate release notes
          cat > release_notes.md << EOF
          # Release v${{ steps.get_version.outputs.version }}
          
          ## 🚀 What's New
          
          This release includes the following updates:
          
          ### 📱 Mobile Apps
          - **Android**: APK build attached to this release
          - **iOS**: Build available for TestFlight/App Store distribution
          
          ### 🌐 Web App
          - Deployed to Vercel
          - Accessible at your Vercel domain
          
          ## 📋 Changes
          
          \`\`\`
          $COMMITS
          \`\`\`
          
          ## 📥 Downloads
          
          - **Android APK**: Download from the assets below
          - **iOS Build**: Available for internal testing
          - **Web**: Live at your Vercel deployment
          
          ## 🔧 Technical Details
          
          - Built with Expo SDK 53
          - React Native 0.79.5
          - NativeWind for styling
          - TypeScript support
          
          ---
          
          *Generated automatically on $(date)*
          EOF
          
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          cat release_notes.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body: ${{ steps.release_notes.outputs.notes }}
          draft: false
          prerelease: false
          
      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: ./android-builds
          
      - name: Upload Android APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./android-builds/app-release.apk
          asset_name: app-release-${{ steps.get_version.outputs.version }}.apk
          asset_content_type: application/vnd.android.package-archive
          
      - name: Download iOS Build
        uses: actions/download-artifact@v4
        with:
          name: ios-build
          path: ./ios-builds
          
      - name: Upload iOS Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ios-builds/
          asset_name: ios-build-${{ steps.get_version.outputs.version }}.zip
          asset_content_type: application/zip 