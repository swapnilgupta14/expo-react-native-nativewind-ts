name: Cleanup Old Releases

on:
  workflow_run:
    workflows: ['Release']
    types:
      - completed

jobs:
  cleanup-releases:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Cleanup Old Releases
        uses: actions/github-script@v7
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            // Keep only the latest 3 releases
            const releasesToDelete = releases.data.slice(3);

            if (releasesToDelete.length === 0) {
              console.log('No old releases to delete. Keeping all releases.');
              return;
            }

            console.log(`Found ${releasesToDelete.length} old releases to delete`);

            for (const release of releasesToDelete) {
              console.log(`üóëÔ∏è Deleting release: ${release.name} (${release.tag_name})`);
              
              try {
                await github.rest.repos.deleteRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: release.id
                });
                
                // Also delete the tag
                await github.rest.git.deleteRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: `tags/${release.tag_name}`
                });
                
                console.log(`‚úÖ Successfully deleted release: ${release.name}`);
              } catch (error) {
                console.log(`‚ö†Ô∏è Failed to delete release ${release.name}: ${error.message}`);
              }
            }

            console.log(`‚úÖ Kept ${Math.min(releases.data.length, 3)} latest releases`);
